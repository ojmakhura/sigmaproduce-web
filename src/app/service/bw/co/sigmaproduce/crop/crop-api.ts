// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { CropVO } from '@app/model/bw/co/sigmaproduce/crop/crop-vo';
import { CropListVO } from '@app/model/bw/co/sigmaproduce/crop/crop-list-vo';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { CropIssueType } from '@app/model/bw/co/sigmaproduce/crop/issue/crop-issue-type';

@Injectable({
  providedIn: 'root'
})
export class CropApi {
    
    protected path = 'crop';

    constructor(private http: HttpClient) {
    }

    public findByCropTypes(cropTypeIds: Set<string> | any ): Observable<CropListVO[] | any[]> {

        return this.http.get<CropListVO[] | any[]>(this.path + `/types`);

    }

    public findById(id: string | any ): Observable<CropVO | any> {

        return this.http.get<CropVO | any>(this.path + `/${id}`);

    }

    public findByIssueType(issueType: CropIssueType | any ): Observable<CropListVO[] | any[]> {

        return this.http.get<CropListVO[] | any[]>(this.path + `/issue/type`);

    }

    public getAll(): Observable<CropListVO[] | any[]> {

        return this.http.get<CropListVO[] | any[]>(this.path);

    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<Page<CropListVO> | any> {

        return this.http.get<Page<CropListVO> | any>(this.path + `/page/${pageNumber}/size/${pageSize}`);

    }

    public pagedSearch(pageNumber: number | any , pageSize: number | any , criteria: string | any ): Observable<Page<CropListVO> | any> {

        return this.http.get<Page<CropListVO> | any>(this.path + `/search/page/${pageNumber}/size/${pageSize}`);

    }

    public remove(id: string | any ): Observable<boolean | any> {

        return this.http.delete<boolean | any>(this.path + `/${id}`);

    }

    public save(crop: CropVO | any ): Observable<CropVO | any> {

        return this.http.post<CropVO | any>(this.path, crop);

    }

    public search(criteria: string | any ): Observable<CropListVO[] | any[]> {

        return this.http.post<CropListVO[] | any[]>(this.path + `/search`, criteria);

    }

}
