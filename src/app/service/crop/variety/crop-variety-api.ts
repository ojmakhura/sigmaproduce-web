// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { CropVarietyList } from '@app/model/crop/variety/crop-variety-list';
import { CropVarietyVO } from '@app/model/crop/variety/crop-variety-vo';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';

@Injectable({
  providedIn: 'root',
})
export class CropVarietyApi {
  protected path = '/crop/variety';

  constructor(private http: HttpClient) {}

  public findById(id: string | any): Observable<CropVarietyVO | any> {
    return this.http.get<CropVarietyVO | any>(this.path + `/${id}`);
  }

  public getAll(): Observable<CropVarietyList[] | any[]> {
    return this.http.get<CropVarietyList[] | any[]>(this.path);
  }

  public getAllPaged(pageNumber: number | any, pageSize: number | any): Observable<Page<CropVarietyList> | any> {
    return this.http.get<Page<CropVarietyList> | any>(this.path + `/page/${pageNumber}/size/${pageSize}`);
  }

  public pagedSearch(
    pageNumber: number | any,
    pageSize: number | any,
    criteria: string | any
  ): Observable<Page<CropVarietyList> | any> {
    return this.http.get<Page<CropVarietyList> | any>(this.path + `/search/page/${pageNumber}/size/${pageSize}`);
  }

  public remove(id: string | any): Observable<boolean | any> {
    return this.http.delete<boolean | any>(this.path + `/${id}`);
  }

  public save(cropVariety: CropVarietyVO | any): Observable<CropVarietyVO | any> {
    return this.http.post<CropVarietyVO | any>(this.path, cropVariety);
  }

  public search(criteria: string | any): Observable<CropVarietyList[] | any[]> {
    return this.http.get<CropVarietyList[] | any[]>(this.path + `/search`);
  }
}
